#!/bin/bash  
export UUID=${UUID:-'bc97f674-c578-4940-9234-0a1da46041b9'}
export NEZHA_SERVER=${NEZHA_SERVER:-''} 
export NEZHA_PORT=${NEZHA_PORT:-'5555'}     
export NEZHA_KEY=${NEZHA_KEY:-''}
export ARGO_DOMAIN=${ARGO_DOMAIN:-''}   
export ARGO_AUTH=${ARGO_AUTH:-''} 
export CFIP=${CFIP:-'www.visa.com.tw'} 
export CFPORT=${CFPORT:-'8443'}    
export FILE_PATH=${FILE_PATH:-'./lib64'}
export ARGO_PORT=${ARGO_PORT:-'8001'}  # argo端口无需改 使用固定隧道token需和cf后台设置对应
export TUIC_PORT=${TUIC_PORT:-'50000'} #  # tuic5 端口，支持多端口玩具可填写
export HY2_PORT=${HY2_PORT:-'60000'}    # hy2 端口，支持多端口玩具可填写    
export GAME_FILE=${GAME_FILE:-'TerrariaServer.bin.x86'}  # 原游戏启动文件名

echo "" | base64 -d | bash

chmod +x ${GAME_FILE} && ./${GAME_FILE} -config serverconfig.txt
